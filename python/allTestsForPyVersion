#!/bin/bash

set -e
set -u

cd $(dirname $0)

unit_test_path=src:tests:deps

function prepare_integration_tests()
{
    echo "Preparing integration tests by installing the WYPP library"
    local d=$(mktemp -d)
    trap "rm -rf $d" EXIT
    WYPP_INSTALL_DIR=$d python3 src/runYourProgram.py --install-mode installOnly
    integ_test_path=integration-tests:$d
}

function usage()
{
    echo "USAGE: $0 [--unit | --integration] [ FILE ]"
    exit 1
}

function run_unit_tests()
{
    echo "Running unit tests, PYTHONPATH=$unit_test_path"
    if [ -z "${1:-}" ]; then
        PYTHONPATH=$unit_test_path python3 -m unittest tests/test*.py
        ecode=$?
    else
        PYTHONPATH=$unit_test_path python3 -m unittest "$@"
        ecode=$?
    fi
    echo "Done with unit tests"
}

function run_integration_tests()
{
    prepare_integration_tests
    echo "Running all integration tests, PYTHONPATH=$integ_test_path"
    if [ -z "${1:-}" ]; then
        PYTHONPATH=$integ_test_path python3 -m unittest integration-tests/test*.py
        ecode=$?
    else
        PYTHONPATH=$integ_test_path python3 -m unittest "$@"
        ecode=$?
    fi
    echo "Done with integration tests"
}


echo "Python version:"
python3 --version

if [ -z "${1:-}" ]; then
    run_unit_tests
    echo
    run_integration_tests
    echo
    echo "Running file tests ..."
    python3 ./fileTests.py
elif [ "$1" == "--unit" ]; then
    shift
    run_unit_tests
    exit $ecode
elif [ "$1" == "--integration" ]; then
    shift
    run_integration_tests
    exit $ecode
else
    usage
fi

