Traceback (most recent call last):
  File "test-data/testTypesDict4.py", line 11, in <module>
    foo({'y': func})  # error
  File "test-data/testTypesDict4.py", line 7, in foo
    res.append(f())
WyppTypeError: dict_items does not implement protocol Iterable[tuple[~K=str, ~V=Callable[[], str]]] correctly.
given:    dict_items([('y', <function <lambda> at 0x00>), ('x', <untypy.impl.callable.TypedCallable object at 0x00>)])
expected: value of type Iterable[tuple[~K=str, ~V=Callable[[], str]]]

context: foo(d: dict[str, Callable[[], str]]) -> list[str]
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
declared at: test-data/testTypesDict4.py:3
caused by: test-data/testTypesDict4.py:11
  | foo({'y': func})  # error

given:    42
expected: value of type str

context: __iter__(self: Self) -> Iterator[tuple[~K=str, Callable[[], str]]]
                                                                     ^^^
declared at: site-lib/untypy/impl/interfaces/iterable.py:7
caused by: test-data/testTypesDict4.py:10
  | func = lambda: 42
